
global motion
motion = 0


def nim2(x, y, motion_):  # игра ним с двумя кучами с x и y камнями; motion_ - чей ход
    while n[0] + n[1] + n[2] != 0:
        if motion_ == 0:
            if n[x] > n[y]:
                n[x] = n[y]
                print(x, (n[x] - n[y]), n[0], n[1], n[2])
            elif n[y] > n[x]:
                k = n[y] - n[x]
                n[y] = n[x]
                print(y, k, n[0], n[1], n[2])
            else:
                n[x] -= 1
                k = 1
                print(x, k, n[0], n[1], n[2])
        elif motion_ == 1:
            right_motion = False
            while right_motion is False:  # верно ли походил пользователь?
                N = int(input())  # ввод номера кучи
                k = int(input())  # ввод количества забираемых камней
                if (N == 1 or N == 2 or N == 3) and n[N - 1] >= k and k > 0:  # проверка правильности хода
                    n[N - 1] -= k
                    right_motion = True  # ход верный
                else:
                    print('Некорректный ход:', N, k)
            print(N, k, n[0], n[1], n[2])
        motion_ += 1
        motion_ %= 2
    global motion
    motion = (motion_ + 1) % 2


n = [int(input()), int(input()), int(input())]  # ввод количества камней в каждой куче; три кучи - один массив
win = -1  # переменная, отвечающая за имя победителя   1 - ИИ   0 - игрок; статус победы   -1 - игра в процессе


while n[0] + n[1] + n[2] != 0:  # сама игра
    if motion == 0:  # ход ИИ
        if n[0] == 0:  # игра превращается в ним2
            nim2(1, 2, motion)
        elif n[1] == 0:  # игра превращается в ним2
            nim2(0, 2, motion)
        elif n[2] == 0:  # игра превращается в ним2
            nim2(0, 1, motion)
        elif n[0] == n[1]:  # две кучи равны - приводим игру в ним2 в выигрышной позиции
            k = n[2]
            n[2] = 0
            print(3, k, n[0], n[1], n[2])
        elif n[0] == n[2]:  # две кучи равны - приводим игру в ним2 в выигрышной позиции
            k = n[1]
            n[1] = 0
            print(2, k, n[0], n[1], n[2])
        elif n[2] == n[1]:  # две кучи равны - приводим игру в ним2 в выигрышной позиции
            k = n[0]
            n[0] = 0
            print(1, k, n[0], n[1], n[2])
        elif n[0] > 1 and n[0] - 1 != n[2] and n[0] - 1 != n[1]:  # остальные позиции - все кучи разные и не равны нулю
            k = 1
            n[0] -= 1
            print(1, k, n[0], n[1], n[2])
        elif n[1] > 1 and n[1] - 1 != n[2] and n[1] - 1 != n[0]:  # остальные позиции - все кучи разные и не равны нулю
            k = 1
            n[0] -= 1
            print(2, k, n[0], n[1], n[2])
        elif n[2] > 1 and n[2] - 1 != n[1] and n[2] - 1 != n[0]:  # остальные позиции - все кучи разные и не равны нулю
            k = 1
            n[2] -= 1
            print(3, k, n[0], n[1], n[2])
        else:
            n[0] -= 1
            k = 1
            print(1, 1, n[0], n[1], n[2])
    elif motion == 1:  # ход игрока
        right_motion = False
        while right_motion is False:  # верно ли походил пользователь?
            N = int(input())  # ввод номера кучи
            k = int(input())  # ввод количества забираемых камней
            if (N == 1 or N == 2 or N == 3) and n[N - 1] >= k and k > 0:  # проверка правильности хода
                n[N - 1] -= k
                right_motion = True  # ход верный
            else:
                print('Некорректный ход:', N, k)
        print(N, k, n[0], n[1], n[2])
    motion += 1
    motion %= 2
if motion == 1:  # вывод имени победителя
    print('ИИ выиграл!')
else:
    print('Вы выиграли!')
